@using TextPub;
@using TextPub.DropBox;
@using TextPub.DropBox.Models;

@{

    const string dropBoxUserCredentials = "DropBoxUserCredentials";
    
    bool isConfigured = TextPub.IsConfigured;
        
    string syncInterval = "60";

    if (!isConfigured)
    {
        if (IsPost)
        {
            string consumerToken = Request["consumerToken"];
            string consumerSecret = Request["consumerSecret"];
            syncInterval = Request["syncInterval"];
            
            if (string.IsNullOrWhiteSpace(consumerToken))
            {
                ModelState.AddError("consumerToken", "An app token is required");
            }

            if (string.IsNullOrWhiteSpace(consumerSecret))
            {
                ModelState.AddError("consumerSecret", "An app secret is required");
            }
            
            try 
            {
                int.Parse(syncInterval);
            }
            catch
            {
                ModelState.AddError("syncInterval", "The sync interval must be specified as an integer.");
            }
            
            if (ModelState.IsValid)
            {
                
                Session[Configuration.DropBoxConsumerTokenKey] = consumerToken;
                Session[Configuration.DropBoxConsumerSecretKey] = consumerSecret;
                Session[Configuration.DropBoxSyncIntervalKey] = syncInterval;

                var client = new DropBoxClient(consumerToken, consumerSecret);
                var requestToken = client.GetRequestToken();
                Session[dropBoxUserCredentials] = requestToken;

                client.SetUserCredentials(requestToken.Token, requestToken.Secret);

                string returnUrl = string.Format("{0}://{1}{2}/textpub/setup", Request.Url.Scheme, Request.Url.Authority, Request.ApplicationPath.TrimEnd('/'));

                Response.Redirect(client.GetAuthorizationUrl(returnUrl));
                
                return;

            }
        }
        else
        {
            if (Session[dropBoxUserCredentials] != null)
            {
                var consumerToken = (string)Session[Configuration.DropBoxConsumerTokenKey];
                var consumerSecret = (string)Session[Configuration.DropBoxConsumerSecretKey];
                syncInterval = (string)Session[Configuration.DropBoxSyncIntervalKey];

                if (string.IsNullOrWhiteSpace(consumerToken)
                    || string.IsNullOrWhiteSpace(consumerSecret))
                {
                    // TODO
                    throw new Exception();
                }

                var client = new DropBoxClient(consumerToken, consumerSecret, Session[dropBoxUserCredentials] as UserCredentials);

                UserCredentials accessToken = client.GetAccessToken();
                if (accessToken != null && !string.IsNullOrEmpty(accessToken.Token) && !string.IsNullOrEmpty(accessToken.Secret))
                {
                    TextPub.Configure(consumerToken, consumerSecret, accessToken.Token, accessToken.Secret, int.Parse(syncInterval));
                }
                isConfigured = TextPub.IsConfigured;
            }
        }    
    }
}

<style>
    label {
        display: block;
    }

    input[name=syncInterval] {
        width: 3em;
    }

    .input-validation-error {
        border: 2px solid #c00;
    }
    
    .field-validation-error {
        font-weight: bold;
        color: #c00;
    }
    
</style>

@if (isConfigured)
{
    <h1>Setup complete</h1>
    <p>All necessary information has been collected and your DropBox files are now being synced every @syncInterval minutes.</p>
    <p>This file (~/TextPub/Setup.cshtml) has now filled it's purpose and <strong>should be deleted</strong>.</p>
}
else
{
    
<h1>Set up TextPub</h1>


<form method="post" action="@Href("~/TextPub/Setup")">
    <p>
        To make TextPub work with your DropBox account, you will have to go to 
        <a href="https://www.dropbox.com/developers/apps">https://www.dropbox.com/developers/apps</a> and create a DropBox app. 
        Then copy your "App key" and "App secret" and paste them into the fields below.
    </p> 
    <p>All configuration data will be stored in the TextPub.config file in the root directory of this web application.</p>
    <fieldset>
    
        <legend>Enter your DropBox app credentials:</legend>
        <p>
        @Html.Label("App key", "consumerToken")
        @Html.TextBox("consumerToken")
        @Html.ValidationMessage("consumerToken")
        </p>
        <p>
        @Html.Label("App secret", "consumerSecret")
        @Html.TextBox("consumerSecret")
        @Html.ValidationMessage("consumerSecret")
        </p>
    </fieldset>

    <p>
        <label>Sync DropBox files every @Html.TextBox("syncInterval", @syncInterval) minutes.</label>
        @Html.ValidationMessage("syncInterval")
    </p>

<p>When you press 'Continue', you will be redirected to DropBox.com to grant TextPub access to your DropBox app folder. Press the "Allow" button to be redirected back to this page.</p>
<div>        
    <input type="submit" value="Continue" />
</div>
</form>
}